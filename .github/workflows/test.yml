name: Test and build
on:
  push:
    branches:
      - feature/*
      - master
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: false
        default: 'info' 
        type: choice
        options:
        - info
        - warning
        - debug
env:
  APP_NAME: url_shortener
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests with docker compose
        run: |
          ./docker-compose.sh test build 
          ./docker-compose.sh test up --exit-code-from backend
          ./docker-compose.sh test down
  # TODO: Build and push multi-arch docker image locally, github ci supports arm64 or a better solution is found
  # build-amd64:
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         # Can't use self-defined environment variables for some reason
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.DOCKER_BUILD_PUSH_TOKEN }}
  #     - name: Build image
  #       id: build_image
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: false
  #         target: release
  #         tags: ghcr.io/${{ github.repository_owner }}/url_shortener:${{ github.sha }}
  #         cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/url_shortener:buildcache
  #         cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/url_shortener:buildcache,mode=max
  #         platforms: linux/amd64
  # build-arm64:
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   steps:
  #     - name: Set up QEMU
  #       # npm install takes a very long time for arm64
  #       # https://github.com/docker/setup-qemu-action/issues/22
  #       # https://github.com/nodejs/docker-node/issues/1335
  #       uses: docker/setup-qemu-action@v2
  #       with:
  #         platforms: arm64
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         # Can't use self-defined environment variables for some reason
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.DOCKER_BUILD_PUSH_TOKEN }}
  #     - name: Build image
  #       id: build_image
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: false
  #         target: release
  #         tags: ghcr.io/${{ github.repository_owner }}/url_shortener:${{ github.sha }}
  #         cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/url_shortener:buildcache
  #         cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/url_shortener:buildcache,mode=max
  #         platforms: linux/arm64
  notify_unsuccessful:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ failure() }}
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - name: Send slack notification
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          payload=$(echo "{\"text\":\"URL shortener backend: Test and build failed at <DATE>. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" | sed "s~<DATE>~$now~")
          curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK
