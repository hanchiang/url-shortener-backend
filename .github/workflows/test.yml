name: Test workflow
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests with docker compose
        run: |
          ./docker-compose.sh build test
          ./docker-compose.sh up test --exit-code-from backend
          ./docker-compose.sh down test
  build_and_push_image:
    runs-on: ubuntu-latest
    env:
      APP_NAME: url_shortener
      IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
      REGISTRY_USER: ${{ github.actor }}
      REGISTRY_PASSWORD: ${{ secrets.DOCKER_BUILD_DEPLOY_TOKEN }}
    # Cache: https://www.docker.com/blog/docker-github-actions/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # - name: Build docker image
      #   id: build_image
      #   run: docker build -t "$IMAGE_REGISTRY/$APP_NAME:$GITHUB_SHA" .
      - name: Login to GitHub Container Registry
        id: login_registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: $REGISTRY_USER
          password: $REGISTRY_PASSWORD
      - name: Build and push
        id: docker_build_push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags:  ${{ github.repository_owner }}/$APP_NAME:$GITHUB_SHA
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Log in to github container registry
      #   id: login_registry
      #   run: echo $REGISTRY_PASSWORD | docker login ghcr.io -u $REGISTRY_USER --password-stdin
      # - name: Push to registry
      #   id: push_image
      #   run: docker push "$IMAGE_REGISTRY/$APP_NAME:$GITHUB_SHA"
      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push_image.outputs) }}"
          echo "${{ toJSON(steps.buildx.outputs) }}"
          echo ${{ toJSON(steps.docker_build_push.outputs) }}